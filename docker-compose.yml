version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ideas_voting_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped

  # Backend API
  backend:
    env_file:
      - .env
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ideas_voting_backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: ${BACKEND_PORT}
      NODE_ENV: ${NODE_ENV}
      FRONTEND_URL: ${FRONTEND_URL}
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    depends_on:
      - postgres
    networks:
      - app_network
    restart: unless-stopped
    command: >
      sh -c "
        npx prisma db push --accept-data-loss &&
        npx prisma db seed &&
        npm run dev
      "

  # Frontend React App
  frontend:
    env_file:
      - .env
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ideas_voting_frontend
    environment:
      VITE_API_URL: ${VITE_API_URL}
    ports:
      - ${FRONTEND_PORT}:${FRONTEND_PORT}
    depends_on:
      - backend
    networks:
      - app_network
    restart: unless-stopped
    command: npm run dev -- --host 0.0.0.0

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: ideas_voting_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge