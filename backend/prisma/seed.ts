import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

const ideas = [
  {
    title: 'Интерактивные головоломки с подсказками',
    description: 'Добавить систему подсказок для сложных логических задач, чтобы дети могли постепенно развивать навыки решения задач.'
  },
  {
    title: 'Мультиплеерные соревнования',
    description: 'Возможность соревноваться с друзьями в реальном времени в решении логических задач.'
  },
  {
    title: 'Адаптивная сложность',
    description: 'Система, которая автоматически подстраивает сложность задач под уровень каждого ребенка.'
  },
  {
    title: 'Система достижений и наград',
    description: 'Добавить виртуальные награды, бейджи и достижения для мотивации детей.'
  },
  {
    title: 'Голосовые подсказки',
    description: 'Возможность прослушать задание голосом для детей, которые еще не умеют читать.'
  },
  {
    title: 'Родительский кабинет',
    description: 'Панель для родителей с аналитикой прогресса ребенка и рекомендациями.'
  },
  {
    title: 'Темная тема',
    description: 'Добавить темную тему для комфортного использования в вечернее время.'
  },
  {
    title: 'Офлайн режим',
    description: 'Возможность загружать задачи для решения без подключения к интернету.'
  },
  {
    title: 'AR головоломки',
    description: 'Использовать дополненную реальность для создания интерактивных 3D головоломок.'
  },
  {
    title: 'Социальные функции',
    description: 'Возможность делиться достижениями в социальных сетях и приглашать друзей.'
  },
  {
    title: 'Геймификация обучения',
    description: 'Добавить элементы игры: уровни, опыт, прокачка навыков логического мышления.'
  },
  {
    title: 'Мобильное приложение',
    description: 'Создать нативные мобильные приложения для iOS и Android.'
  }
];

async function main() {
  console.log('Начинаем заполнение базы данных...');
  
  // Очищаем существующие данные
  await prisma.vote.deleteMany();
  await prisma.idea.deleteMany();
  
  // Создаем идеи
  for (const idea of ideas) {
    await prisma.idea.create({
      data: idea
    });
  }
  
  console.log(`Создано ${ideas.length} идей`);
  console.log('База данных успешно заполнена!');
}

main()
  .catch((e) => {
    console.error(e);
    process.exit(1);
  })
  .finally(async () => {
    await prisma.$disconnect();
  });

